@mixin flex($bp:''){



    // display ( block , inline-block , inline , flex , hide , grid )
    @each $key , $val in $displays{
        .#{$bp}#{$key} {
            display: $val;
        }
    }

    // flex grow ( 1 to 100 )
    @for $i from 0 through 100 {
        .#{$bp}grow-#{ $i }{
            flex-grow: #{ $i };
        }
    }

    // flex shrink
    @for $i from 0 through 1 {
        .#{$bp}shrink-#{ $i }{
            flex-shrink: #{ $i };
        }
    }


    // justiy content for flex ( space between , start , end , space around )
    @each $prefix , $map in $flex-justify {
        @each $name , $value in $map {
            .#{$bp}#{$prefix}-#{$name} {
                justify-content: $value ;
            }
        }
    }

    // align items for flex ( start , end center  , baseline )
    @each $prefix , $map in $flex-align-items {
        @each $name , $value in $map {
            .#{$bp}#{$prefix}-#{$name} {
                align-items : $value ;
            }
        }
    }


    // align self for flex ( start , end center  , baseline )
    @each $prefix , $map in $align-self {
        @each $name , $value in $map {
            .#{$bp}#{$prefix}-#{$name} {
                align-self : $value ;
            }
        }
    }



    // flex directions ( row , row-reverse , column , column-reverse )
    @each $prefix , $map in $flex-directions {
        @each $name , $value in $map {
            .#{$bp}#{$prefix}-#{$name} {
                flex-direction : $value ;
            }
        }
    }


    // setting gap  ( 1 to 80 )
    @for $i from 0 through 80 {
        .#{$bp}gap#{ $i}{
            gap : #{ $gap-base / 4 * $i};
        }
        .#{$bp}col-gap#{ $i}{
            column-gap : #{ $gap-base / 4 * $i};
        }
        .#{$bp}row-gap#{ $i}{
            row-gap : #{ $gap-base / 4 * $i};
        }
    }

    // flex order
    @for $i from -1 through 20{

        .#{ $bp }flex-order#{ $i }{
            order: $i ;
        }

    } 
}

